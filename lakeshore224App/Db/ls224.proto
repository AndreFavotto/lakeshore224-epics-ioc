##################################################
# Protocol file for Lakeshore 224
# Based on protocol file for Lakeshore 336 from Diamond Light Source
#
##################################################
#INPUTS:A, B, C1-C5, D1-D5
##################################################

# General Settings
##################################################

Terminator = "\r\n";
ReplyTimeout = 1000;

##################################################

@init{getALARM;}

# Identification
getID {
   out "*IDN?";
   in "LSCI,%s";
}
getMODEL {in "LSCI,%8c,%*15c,%*s";}
getSERIAL {in "LSCI,%*8c,%15c,%*s";}
getFIRMWARE {in "LSCI,%*8c,%*15c,%s";}

# /// Read the temperature in kelvin for inputs
getKRDG {
   out "KRDG? \$1";
   in "%f";
}

# /// Read the voltage input for inputs
getSRDG {
   out "SRDG? \$1";
   in "%f";
}

# /// Read the input sensor name
getINNAME {
   out "INNAME? \$1";
   in "%#s";
}

# /// Read the alarm status
# /// The first param is the input number, the second is the alarm low record.
getALARMST {
   out "ALARMST? \$1";
   in "%d,%(\$2)d";
}

# /// Read the alarm params. The ends of the PV names were put here
# /// to make the initial record INP link short.
getALARM {
   out "ALARM? \$1";
   in "%(\$2OnOff-RB)d,%(\$2HighVal-RB)f,%(\$2LowVal-RB)f,%(\$2DeadBand-RB)f,%(\$2LatchEnbl-RB)d,%(\$2Audible-RB)d,%(\$2Visible-RB)d";
}

getRELAY {
   out "RELAY? \$1";
   in "%(\$2Mode-Sts)d,%(\$2InputTrig-Sts)s,%(\$2AlarmType-Sts)d";
}

# # /// Read the input reading status
# getRDGST { 
#    out "RDGST? \$1";
#    in "%d";
# }

# # /// Read the input curve number
# getINCRV { 
#    out "INCRV? \$1";
#    in "%d";
# }

# # /// Read the input type params. The ends of the PV names were put here
# # /// to make the initial record INP link short.
# getINTYPE { 
#    out "INTYPE? \$1";
#    in "%(\$2S)d,%(\$2AR)d,%(\$2R)d,%(\$2C)d,%(\$2U)d";
# }
####################################################################

# Setting Alarm parameters

## Allow setting alarm parameters one by one (as the others are required, get them from the readbacks)
setAlarmOnOff        {out "ALARM \$1,%(\$2OnOff-Cmd)d,%(\$2HighVal-RB)f,%(\$2LowVal-RB)f,%(\$2DeadBand-RB)f,%(\$2LatchEnbl-RB)d,%(\$2Audible-RB)d,%(\$2Visible-RB)d";}
setAlarmHighVal      {out "ALARM \$1,%(\$2OnOff-RB)d,%(\$2HighVal-SP)f,%(\$2LowVal-RB)f,%(\$2DeadBand-RB)f,%(\$2LatchEnbl-RB)d,%(\$2Audible-RB)d,%(\$2Visible-RB)d";}
setAlarmLowVal       {out "ALARM \$1,%(\$2OnOff-RB)d,%(\$2HighVal-RB)f,%(\$2LowVal-SP)f,%(\$2DeadBand-RB)f,%(\$2LatchEnbl-RB)d,%(\$2Audible-RB)d,%(\$2Visible-RB)d";}
setAlarmDeadBand     {out "ALARM \$1,%(\$2OnOff-RB)d,%(\$2HighVal-RB)f,%(\$2LowVal-RB)f,%(\$2DeadBand)f,%(\$2LatchEnbl-RB)d,%(\$2Audible-RB)d,%(\$2Visible-RB)d";}
setAlarmLatchEnable  {out "ALARM \$1,%(\$2OnOff-RB)d,%(\$2HighVal-RB)f,%(\$2LowVal-RB)f,%(\$2DeadBand-RB)f,%(\$2LatchEnbl-Cmd)d,%(\$2Audible-RB)d,%(\$2Visible-RB)d";}
setAlarmAudible      {out "ALARM \$1,%(\$2OnOff-RB)d,%(\$2HighVal-RB)f,%(\$2LowVal-RB)f,%(\$2DeadBand-RB)f,%(\$2LatchEnbl-RB)d,%(\$2Audible-Cmd)d,%(\$2Visible-RB)d";}
setAlarmVisible      {out "ALARM \$1,%(\$2OnOff-RB)d,%(\$2HighVal-RB)f,%(\$2LowVal-RB)f,%(\$2DeadBand-RB)f,%(\$2LatchEnbl-RB)d,%(\$2Audible-RB)d,%(\$2Visible-Cmd)d";}

# Setting Relay parameters

setRelayMode         {out "RELAY \$1 %(\$2Mode-Sel)d,%(\$2InputTrig-Sts)s,%(\$2AlarmType-Sts)d";}
setRelayInputTrigger {out "RELAY \$1 %(\$2Mode-Sts)d,%(\$2InputTrig-Sel)s,%(\$2AlarmType-Sts)d";}
setRelayAlarmType    {out "RELAY \$1 %(\$2Mode-Sts)d,%(\$2InputTrig-Sts)s,%(\$2AlarmType-Sel)d";}

# /// Set the input sensor name
setINNAME {
  out "INNAME \$1,\"%s\"";
  @init { getINNAME; }
}